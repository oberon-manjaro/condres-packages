From f37b5b726afbac660c60260b6b4cddc34da73226 Mon Sep 17 00:00:00 2001
From: vboxsync <vboxsync@cfe28804-0f27-0410-a406-dd0f0b0b656f>
Date: Thu, 22 Nov 2018 14:08:09 +0000
Subject: [PATCH] iprt: adjust time-r0drv-linux.c for Linux 4.20. bugref:4567:
 Linux kernel driver maintainance. Routine ktime_get_real_ts() must be
 replaced by ktime_get_real_ts64(). Thank you Larry Finger for the patch. 
 (Adjusted before applying.)

git-svn-id: http://www.virtualbox.org/svn/vbox@75665 cfe28804-0f27-0410-a406-dd0f0b0b656f
---
 trunk/include/iprt/time.h                             |  8 ++++++++
 trunk/src/VBox/Runtime/r0drv/linux/time-r0drv-linux.c | 11 ++++++++++-
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/trunk/include/iprt/time.h b/trunk/include/iprt/time.h
index 080accf968..44b5f4f73b 100644
--- a/trunk/include/iprt/time.h
+++ b/trunk/include/iprt/time.h
@@ -428,6 +428,14 @@ DECLINLINE(PRTTIMESPEC) RTTimeSpecSetTimespec(PRTTIMESPEC pTime, const struct ti
 {
     return RTTimeSpecAddNano(RTTimeSpecSetSeconds(pTime, pTimespec->tv_sec), pTimespec->tv_nsec);
 }
+
+
+# ifdef _LINUX_TIME64_H
+DECLINLINE(PRTTIMESPEC) RTTimeSpecSetTimespec64(PRTTIMESPEC pTime, const struct timespec64 *pTimeval)
+{
+    return RTTimeSpecAddNano(RTTimeSpecSetSeconds(pTime, pTimeval->tv_sec), pTimeval->tv_nsec);
+}
+# endif
 #endif /* various ways of detecting struct timespec */
 
 
diff --git a/trunk/src/VBox/Runtime/r0drv/linux/time-r0drv-linux.c b/trunk/src/VBox/Runtime/r0drv/linux/time-r0drv-linux.c
index 5b1baadcdd..1a9b56d339 100644
--- a/trunk/src/VBox/Runtime/r0drv/linux/time-r0drv-linux.c
+++ b/trunk/src/VBox/Runtime/r0drv/linux/time-r0drv-linux.c
@@ -171,11 +171,20 @@ RTDECL(PRTTIMESPEC) RTTimeNow(PRTTIMESPEC pTime)
 {
     IPRT_LINUX_SAVE_EFL_AC();
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 16)
+/* On Linux 4.20, time.h includes time64.h and we have to use 64-bit times. */
+# ifdef _LINUX_TIME64_H
+    struct timespec64 Ts;
+    ktime_get_real_ts64(&Ts);
+# else
     struct timespec Ts;
     ktime_get_real_ts(&Ts);
+# endif
     IPRT_LINUX_RESTORE_EFL_AC();
+# ifdef _LINUX_TIME64_H
+    return RTTimeSpecSetTimespec64(pTime, &Ts);
+#else
     return RTTimeSpecSetTimespec(pTime, &Ts);
-
+#endif
 #else   /* < 2.6.16 */
     struct timeval Tv;
     do_gettimeofday(&Tv);
